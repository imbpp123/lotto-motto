// Code generated by MockGen. DO NOT EDIT.
// Source: presentation.go

// Package mock_presentation is a generated GoMock package.
package mock_presentation

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/imbpp123/lotto_motto/internal/lotto_number/model"
)

// MockNumberRowCollectionPresentation is a mock of NumberRowCollectionPresentation interface.
type MockNumberRowCollectionPresentation struct {
	ctrl     *gomock.Controller
	recorder *MockNumberRowCollectionPresentationMockRecorder
}

// MockNumberRowCollectionPresentationMockRecorder is the mock recorder for MockNumberRowCollectionPresentation.
type MockNumberRowCollectionPresentationMockRecorder struct {
	mock *MockNumberRowCollectionPresentation
}

// NewMockNumberRowCollectionPresentation creates a new mock instance.
func NewMockNumberRowCollectionPresentation(ctrl *gomock.Controller) *MockNumberRowCollectionPresentation {
	mock := &MockNumberRowCollectionPresentation{ctrl: ctrl}
	mock.recorder = &MockNumberRowCollectionPresentationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumberRowCollectionPresentation) EXPECT() *MockNumberRowCollectionPresentationMockRecorder {
	return m.recorder
}

// Display mocks base method.
func (m *MockNumberRowCollectionPresentation) Display(collection *model.NumberRowCollection) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Display", collection)
}

// Display indicates an expected call of Display.
func (mr *MockNumberRowCollectionPresentationMockRecorder) Display(collection interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Display", reflect.TypeOf((*MockNumberRowCollectionPresentation)(nil).Display), collection)
}
